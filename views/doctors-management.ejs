
<%- include('headeradmin', { title: 'إدارة الأطباء' }) %>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>إدارة الأطباء</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css">
    <style>
        .search-container { margin: 20px 0; }
        .table-responsive { margin-top: 20px; }
        .pagination { justify-content: center; margin-top: 20px; }
        .form-control { max-width: 300px; }
        .modal-header { background-color: #f8f9fa; border-bottom: 1px solid #dee2e6; }
        .modal-footer { background-color: #f8f9fa; border-top: 1px solid #dee2e6; }
        .toast-container { position: fixed; top: 20px; right: 20px; z-index: 1060; }
        .btn-sm { margin: 0 2px; }
        .form-control:focus { border-color: #80bdff; box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }
        .edit-btn { margin-right: 5px; }
        .status-badge { font-size: 0.9em; padding: 5px 10px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h1 class="my-4">الأطباء</h1>
                <p class="text-muted">هنا يمكنك رؤية قائمة جميع الأطباء</p>
                
             
                <div class="search-container">
                    <div class="input-group">
                        <select class="form-select" id="sortSelect">
                            <option value="default" <%= sort === 'default' ? 'selected' : '' %>>الترتيب الافتراضي</option>
                            <option value="newest" <%= sort === 'newest' ? 'selected' : '' %>>الأحدث أولاً</option>
                            <option value="specialization" <%= sort === 'specialization' ? 'selected' : '' %>>حسب التخصص</option>
                        </select>
                    </div>
                </div>

                <!-- Doctors Table -->
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>اسم المستخدم</th>
                                <th>البريد الإلكتروني</th>
                                <th>التخصص</th>
                                <th>الحالة</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (locals.doctors && doctors.length > 0) { %>
                                <% doctors.forEach(doctor => { %>
                                    <tr data-doctor-id="<%= doctor._id %>">
                                        <td><%= doctor._id %></td>
                                        <td><%= doctor.username %></td>
                                        <td><%= doctor.email %></td>
                                        <td><%= doctor.specialization %></td>
                                        <td>
                                            <% if (doctor.isFrozen) { %>
                                                <span class="badge bg-danger">مجمدة</span>
                                            <% } else { %>
                                                <span class="badge bg-success">نشطة</span>
                                            <% } %>
                                        </td>
                                        <td>
                                            <button class="btn btn-primary btn-sm edit-btn" 
                                                    onclick="openEditModal('<%= doctor._id %>', '<%= doctor.username %>', '<%= doctor.email %>', '<%= doctor.specialization %>')">
                                                تعديل
                                            </button>
                                            <% if (doctor.isFrozen) { %>
                                                <button class="btn btn-warning btn-sm" onclick="unfreezeDoctor('<%= doctor._id %>')">إلغاء التجميد</button>
                                            <% } else { %>
                                                <button class="btn btn-warning btn-sm" onclick="freezeDoctor('<%= doctor._id %>')">تجميد</button>
                                            <% } %>
                                            <button class="btn btn-info btn-sm" onclick="openSendMessageModal('<%= doctor._id %>', '<%= doctor.email %>')">إرسال رسالة</button>
                                            <a href="/admin/delete-doctor/<%= doctor._id %>" 
                                               class="btn btn-danger btn-sm" 
                                               onclick="return confirm('هل أنت متأكد من حذف هذا الطبيب؟')">
                                                حذف
                                            </a>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="text-center">ليس هناك أطباء</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <div class="mt-3">
                    <button class="btn btn-success" onclick="exportToExcel()">تصدير إلى Excel</button>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDoctorModal">إضافة طبيب</button>
                </div>

                <!-- Pagination -->
                <nav>
                    <ul class="pagination">
                        <li class="page-item <%= currentPage <= 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>">السابق</a>
                        </li>
                        <li class="page-item active">
                            <span class="page-link"><%= currentPage %></span>
                        </li>
                        <li class="page-item <%= !hasNextPage ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= currentPage + 1 %>">التالي</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

 
    <div class="modal fade" id="addDoctorModal" tabindex="-1" aria-labelledby="addDoctorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addDoctorModalLabel">إضافة طبيب جديد</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addDoctorForm">
                        <input type="hidden" id="csrf" value="<%= csrfToken %>">
                        <div class="mb-3">
                            <label for="addUsername" class="form-label">اسم المستخدم</label>
                            <input type="text" class="form-control" id="addUsername" required>
                        </div>
                        <div class="mb-3">
                            <label for="addEmail" class="form-label">البريد الإلكتروني</label>
                            <input type="email" class="form-control" id="addEmail" required>
                        </div>
                        <div class="mb-3">
                            <label for="addPassword" class="form-label">كلمة المرور</label>
                            <input type="password" class="form-control" id="addPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="addSpecialization" class="form-label">التخصص</label>
                            <select class="form-select" id="addSpecialization" required>
                                <option value="Cardiology">أمراض القلب</option>
                                <option value="Orthopedics">جراحة العظام</option>
                                <option value="Dermatology">الأمراض الجلدية</option>
                                <option value="Pediatrics">طب الأطفال</option>
                                <option value="Internal Medicine">الطب الباطني</option>
                                <option value="Psychiatry">الطب النفسي</option>
                                <option value="Obstetrics and Gynecology">النساء والتوليد</option>
                                <option value="Neurology">الأعصاب</option>
                                <option value="General Practice">الطب العام</option>
                                <option value="Dentistry">طب الأسنان</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="addProfileImage" class="form-label">الصورة الشخصية (PNG فقط)</label>
                            <input type="file" class="form-control" id="addProfileImage" name="profileImage" accept="image/png" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="button" class="btn btn-primary" onclick="addDoctor()">إضافة</button>
                </div>
            </div>
        </div>
    </div>

    
    <div class="modal fade" id="editDoctorModal" tabindex="-1" aria-labelledby="editDoctorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editDoctorModalLabel">تعديل معلومات الطبيب</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editDoctorForm">
                        <input type="hidden" id="editDoctorId">
                        <input type="hidden" id="csrf" value="<%= csrfToken %>">
                        <div class="mb-3">
                            <label for="editUsername" class="form-label">اسم المستخدم</label>
                            <input type="text" class="form-control" id="editUsername" required>
                        </div>
                        <div class="mb-3">
                            <label for="editEmail" class="form-label">البريد الإلكتروني</label>
                            <input type="email" class="form-control" id="editEmail" required>
                        </div>
                        <div class="mb-3">
                            <label for="editSpecialization" class="form-label">التخصص</label>
                            <select class="form-select" id="editSpecialization" required>
                                <option value="Cardiology">أمراض القلب</option>
                                <option value="Orthopedics">جراحة العظام</option>
                                <option value="Dermatology">الأمراض الجلدية</option>
                                <option value="Pediatrics">طب الأطفال</option>
                                <option value="Internal Medicine">الطب الباطني</option>
                                <option value="Psychiatry">الطب النفسي</option>
                                <option value="Obstetrics and Gynecology">النساء والتوليد</option>
                                <option value="Neurology">الأعصاب</option>
                                <option value="General Practice">الطب العام</option>
                                <option value="Dentistry">طب الأسنان</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="button" class="btn btn-primary" onclick="updateDoctor()">حفظ التغييرات</button>
                </div>
            </div>
        </div>
    </div>

    
    <div class="modal fade" id="sendMessageModal" tabindex="-1" aria-labelledby="sendMessageModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sendMessageModalLabel">إرسال رسالة</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="sendMessageForm">
                        <input type="hidden" id="doctorId">
                        <input type="hidden" id="doctorEmail">
                        <div class="mb-3">
                            <label for="messageContent" class="form-label">محتوى الرسالة</label>
                            <textarea class="form-control" id="messageContent" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="button" class="btn btn-primary" onclick="sendMessage()">إرسال</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function openEditModal(doctorId, username, email, specialization) {
            document.getElementById('editDoctorId').value = doctorId;
            document.getElementById('editUsername').value = username;
            document.getElementById('editEmail').value = email;
            document.getElementById('editSpecialization').value = specialization;
            
            const editModal = new bootstrap.Modal(document.getElementById('editDoctorModal'));
            editModal.show();
        }

        async function updateDoctor() {
            const doctorId = document.getElementById('editDoctorId').value;
            const username = document.getElementById('editUsername').value;
            const email = document.getElementById('editEmail').value;
            const specialization = document.getElementById('editSpecialization').value;
            const csrfToken = document.getElementById('csrf').value;

            if (!username || !email || !specialization) {
                showToast('جميع الحقول مطلوبة', 'danger');
                return;
            }

            try {
                const response = await fetch(`/admin/update-doctor/${doctorId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken
                    },
                    body: JSON.stringify({ username, email, specialization })
                });

                const data = await response.json();

                if (data.success) {
                    showToast('تم تحديث معلومات الطبيب بنجاح', 'success');
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editDoctorModal'));
                    modal.hide();
                    location.reload();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء تحديث معلومات الطبيب', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('حدث خطأ أثناء تحديث معلومات الطبيب', 'danger');
            }
        }

        async function addDoctor() {
            const username = document.getElementById('addUsername').value;
            const email = document.getElementById('addEmail').value;
            const password = document.getElementById('addPassword').value;
            const specialization = document.getElementById('addSpecialization').value;
            const profileImage = document.getElementById('addProfileImage').files[0];
            const csrfToken = document.getElementById('csrf').value;

            if (!username || !email || !password || !specialization || !profileImage) {
                showToast('جميع الحقول مطلوبة', 'danger');
                return;
            }

            if (!profileImage.name.endsWith('.png')) {
                showToast('يجب أن تكون الصورة بصيغة PNG فقط', 'danger');
                return;
            }

            const formData = new FormData();
            formData.append('username', username);
            formData.append('email', email);
            formData.append('password', password);
            formData.append('specialization', specialization);
            formData.append('profileImage', profileImage);

            try {
                const response = await fetch('/admin/add-doctor', {
                    method: 'POST',
                    headers: {
                        'CSRF-Token': csrfToken
                    },
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showToast('تم إضافة الطبيب بنجاح', 'success');
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addDoctorModal'));
                    modal.hide();
                    location.reload();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء إضافة الطبيب', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('حدث خطأ أثناء إضافة الطبيب', 'danger');
            }
        }

        async function freezeDoctor(doctorId) {
            try {
                const response = await fetch(`/admin/freeze-doctor/${doctorId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': document.getElementById('csrf').value
                    }
                });

                const data = await response.json();

                if (data.success) {
                    showToast('تم تجميد حساب الطبيب بنجاح', 'success');
                    location.reload();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء تجميد حساب الطبيب', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('حدث خطأ أثناء تجميد حساب الطبيب', 'danger');
            }
        }

        async function unfreezeDoctor(doctorId) {
            try {
                const response = await fetch(`/admin/unfreeze-doctor/${doctorId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': document.getElementById('csrf').value
                    }
                });

                const data = await response.json();

                if (data.success) {
                    showToast('تم إلغاء تجميد حساب الطبيب بنجاح', 'success');
                    location.reload();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء إلغاء تجميد حساب الطبيب', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('حدث خطأ أثناء إلغاء تجميد حساب الطبيب', 'danger');
            }
        }

        function openSendMessageModal(doctorId, doctorEmail) {
            document.getElementById('doctorId').value = doctorId;
            document.getElementById('doctorEmail').value = doctorEmail;
            
            const sendMessageModal = new bootstrap.Modal(document.getElementById('sendMessageModal'));
            sendMessageModal.show();
        }

        async function sendMessage() {
            const doctorId = document.getElementById('doctorId').value;
            const doctorEmail = document.getElementById('doctorEmail').value;
            const messageContent = document.getElementById('messageContent').value;
            const csrfToken = document.getElementById('csrf').value;

            if (!doctorId || !doctorEmail || !messageContent) {
                showToast('جميع الحقول مطلوبة', 'danger');
                return;
            }

            try {
                const response = await fetch('/admin/send-message-doctor', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken
                    },
                    body: JSON.stringify({ doctorId, doctorEmail, messageContent })
                });

                const data = await response.json();

                if (data.success) {
                    showToast('تم إرسال الرسالة بنجاح', 'success');
                    const modal = bootstrap.Modal.getInstance(document.getElementById('sendMessageModal'));
                    modal.hide();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء إرسال الرسالة', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('حدث خطأ أثناء إرسال الرسالة', 'danger');
            }
        }

        function exportToExcel() {
            window.location.href = "/admin/export-doctors/excel";
        }

        function showToast(message, type = 'success') {
            const toastContainer = document.createElement('div');
            toastContainer.className = `toast align-items-center text-white bg-${type} border-0`;
            toastContainer.setAttribute('role', 'alert');
            toastContainer.setAttribute('aria-live', 'assertive');
            toastContainer.setAttribute('aria-atomic', 'true');
            
            toastContainer.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;
            
            document.body.appendChild(toastContainer);
            const toast = new bootstrap.Toast(toastContainer);
            toast.show();
            
            toastContainer.addEventListener('hidden.bs.toast', () => {
                toastContainer.remove();
            });
        }
    </script>
</body>
</html>
<%- include('footeradmin') %>

