<%- include('headeradmin', { title: 'إدارة الأطباء' }) %>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>إدارة الأطباء</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Tajawal', sans-serif; }
        body { background-color: #f8fafc; color: #1e293b; line-height: 1.6; }
        .container { max-width: 1200px; margin: 2rem auto; padding: 1rem; background: #fff; border-radius: 0.75rem; box-shadow: 0 4px 16px 0 rgba(30,41,59,0.07); }
        .table-responsive { margin-top: 20px; }
        .table { border-radius: 0.5rem; overflow: hidden; }
        .table th, .table td { vertical-align: middle; }
        .btn, .btn-sm, .btn-primary, .btn-success, .btn-warning, .btn-danger, .btn-info { font-family: 'Tajawal', sans-serif; font-weight: 500; border-radius: 0.375rem !important; transition: all 0.2s; }
        .btn i { margin-left: 0.3rem; }
        .btn-primary { background-color: #3b82f6; border: none; }
        .btn-primary:hover { background-color: #2563eb; }
        .btn-success { background-color: #22c55e; border: none; }
        .btn-success:hover { background-color: #16a34a; }
        .btn-warning { background-color: #f59e0b; border: none; color: #1e293b; }
        .btn-warning:hover { background-color: #fbbf24; }
        .btn-danger { background-color: #ef4444; border: none; }
        .btn-danger:hover { background-color: #dc2626; }
        .btn-info { background-color: #0ea5e9; border: none; }
        .btn-info:hover { background-color: #0369a1; }
        .badge.bg-success { background-color: #22c55e !important; }
        .badge.bg-danger { background-color: #ef4444 !important; }
        .badge.bg-warning { background-color: #f59e0b !important; color: #1e293b !important; }
        .status-badge { font-size: 0.9em; padding: 5px 10px; }
        .search-container { margin: 20px 0; }
        .form-select, .form-control { border-radius: 0.375rem; font-family: 'Tajawal', sans-serif; }
        .form-control:focus, .form-select:focus { border-color: #3b82f6; box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.15); }
        .modal-header { background-color: #f8f9fa; border-bottom: 1px solid #dee2e6; }
        .modal-footer { background-color: #f8f9fa; border-top: 1px solid #dee2e6; }
        .empty-state { text-align: center; padding: 2rem; color: #64748b; }
        .toast-container { position: fixed; top: 50px; right: 50%; left: auto; transform: translateX(50%); z-index: 1060; }
        #doctorsPagination {
            display: flex;
            justify-content: center !important;
            align-items: center;
            width: 100%;
            margin-top: 24px;
        }
        .pagination-btn {
            background: #fff;
            color: #2563eb;
            border: 1.5px solid #2563eb;
            margin: 0 2px;
            border-radius: 8px;
            padding: 0.18rem 0.7rem;
            font-weight: 700;
            font-size: 0.97rem;
            min-width: 30px;
            min-height: 30px;
            transition: background 0.2s, color 0.2s, box-shadow 0.2s;
            outline: none;
            box-shadow: 0 1px 4px 0 rgba(30,41,59,0.06);
        }
        .pagination-btn.active, .pagination-btn[aria-current="page"] {
            background: #2563eb !important;
            color: #fff !important;
            border-color: #2563eb !important;
            box-shadow: 0 2px 8px 0 rgba(30,41,59,0.10);
        }
        .pagination-btn:focus {
            border-color: #2563eb;
            box-shadow: 0 0 0 2px #2563eb33;
        }
        .pagination-btn.prev-next:hover {
            background: #e0e7ef !important;
            color: #2563eb !important;
            border-color: #2563eb !important;
        }
        .pagination-btn.prev-next {
            background: #f1f5f9;
            color: #2563eb;
            border-color: #2563eb;
        }
        @media (max-width: 992px) {
            .container { max-width: 100%; padding: 0 0.5rem; }
        }
        @media (max-width: 768px) {
            .container { padding: 0.5rem; }
            .table-responsive { font-size: 0.95rem; }
            .modal-content { padding: 0.5rem; }
        }
        @media (max-width: 480px) {
            .container { padding: 0.2rem; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h1 class="my-4"><i class="fas fa-user-md"></i> الأطباء</h1>
                <div class="search-container">
                    <div class="input-group">
                        <select class="form-select" id="sortSelect">
                            <option value="default" <%= sort === 'default' ? 'selected' : '' %>>الترتيب الافتراضي</option>
                            <option value="newest" <%= sort === 'newest' ? 'selected' : '' %>>الأحدث أولاً</option>
                            <option value="specialization" <%= sort === 'specialization' ? 'selected' : '' %>>حسب التخصص</option>
                            <option value="verified" <%= sort === 'verified' ? 'selected' : '' %>>تم التحقق</option>
                            <option value="unverified" <%= sort === 'unverified' ? 'selected' : '' %>>غير محقق</option>
                        </select>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>الاسم</th>
                                <th>البريد الإلكتروني</th>
                                <th>التخصص</th>
                                <th>الحالة</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (locals.doctors && doctors.length > 0) { %>
                                <% doctors.forEach(doctor => { %>
                                    <tr data-doctor-id="<%= doctor._id %>">
                                        <td><%= doctor._id %></td>
                                        <td>
                                            <i class="fas fa-user-md text-primary me-1"></i>
                                            <%= doctor.username %>
                                        </td>
                                        <td>
                                            <i class="fas fa-envelope text-info me-1"></i>
                                            <%= doctor.email %>
                                        </td>
                                        <td>
                                            <i class="fas fa-stethoscope text-secondary me-1"></i>
                                            <%= doctor.specialization %>
                                        </td>
                                        <td>
                                            <% if (doctor.isFrozen) { %>
                                                <span class="badge bg-warning">
                                                    <i class="fas fa-lock"></i> مجمد
                                                </span>
                                            <% } else { %>
                                                <span class="badge bg-success">
                                                    <i class="fas fa-check-circle"></i> نشط
                                                </span>
                                            <% } %>
                                        </td>
                                        <td>
                                            <div class="d-flex flex-column gap-1">
                                                <div class="d-flex flex-wrap gap-1 mb-1">
                                                    <button class="btn btn-primary btn-sm edit-btn px-2 py-1"
                                                        data-bs-toggle="modal" data-bs-target="#editDoctorModal"
                                                        data-id="<%= doctor._id %>"
                                                        data-username="<%= doctor.username %>"
                                                        data-email="<%= doctor.email %>"
                                                        data-specialization="<%= doctor.specialization %>">
                                                        <i class="fas fa-edit"></i> تعديل
                                                    </button>
                                                    <button class="btn btn-info btn-sm message-btn px-2 py-1"
                                                        data-bs-toggle="modal" data-bs-target="#sendMessageModal"
                                                        data-id="<%= doctor._id %>"
                                                        data-email="<%= doctor.email %>">
                                                        <i class="fas fa-envelope"></i> رسالة
                                                    </button>
                                                </div>
                                                <div class="d-flex flex-wrap gap-1">
                                                    <% if (doctor.isFrozen) { %>
                                                        <button class="btn btn-success btn-sm unfreeze-btn px-2 py-1" data-id="<%= doctor._id %>">
                                                            <i class="fas fa-unlock"></i> إلغاء التجميد
                                                        </button>
                                                    <% } else { %>
                                                        <button class="btn btn-warning btn-sm freeze-btn px-2 py-1" data-id="<%= doctor._id %>">
                                                            <i class="fas fa-lock"></i> تجميد
                                                        </button>
                                                    <% } %>
                                                    <a href="/admin/delete-doctor/<%= doctor._id %>"
                                                        class="btn btn-danger btn-sm px-2 py-1"
                                                        onclick="return confirm('هل أنت متأكد من حذف هذا الطبيب؟')">
                                                        <i class="fas fa-trash"></i> حذف
                                                    </a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="text-center empty-state">
                                        <i class="fas fa-user-md fa-2x mb-2"></i><br>
                                        ليس هناك أطباء
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <div class="mt-3">
                    <button class="btn btn-success" onclick="window.location.href='/admin/export-doctors/excel'">
                        <i class="fas fa-file-excel"></i> تصدير إلى Excel
                    </button>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDoctorModal">
                        <i class="fas fa-plus"></i> إضافة طبيب
                    </button>
                </div>
                <!-- Pagination -->
                <div id="doctorsPagination"></div>
            </div>
        </div>
    </div>

    <!-- Add Doctor Modal -->
    <div class="modal fade" id="addDoctorModal" tabindex="-1" aria-labelledby="addDoctorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="addDoctorForm" enctype="multipart/form-data" class="modal-content needs-validation" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="addDoctorModalLabel">إضافة طبيب جديد</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="csrf" value="<%= csrfToken %>">
                    <div class="mb-3">
                        <label for="addUsername" class="form-label">اسم المستخدم</label>
                        <input type="text" class="form-control" id="addUsername" name="username" required>
                        <div class="invalid-feedback">يرجى إدخال اسم المستخدم.</div>
                    </div>
                    <div class="mb-3">
                        <label for="addEmail" class="form-label">البريد الإلكتروني</label>
                        <input type="email" class="form-control" id="addEmail" name="email" required>
                        <div class="invalid-feedback">يرجى إدخال بريد إلكتروني صحيح.</div>
                    </div>
                    <div class="mb-3">
                        <label for="addPassword" class="form-label">كلمة المرور</label>
                        <input type="password" class="form-control" id="addPassword" name="password" required>
                        <div class="invalid-feedback">يرجى إدخال كلمة المرور.</div>
                    </div>
                    <div class="mb-3">
                        <label for="addSpecialization" class="form-label">التخصص</label>
                        <select class="form-select" id="addSpecialization" name="specialization" required>
                            <option value="">اختر التخصص</option>
                            <option value="Cardiology">أمراض القلب</option>
                            <option value="Orthopedics">جراحة العظام</option>
                            <option value="Dermatology">الأمراض الجلدية</option>
                            <option value="Pediatrics">طب الأطفال</option>
                            <option value="Internal Medicine">الطب الباطني</option>
                            <option value="Psychiatry">الطب النفسي</option>
                            <option value="Obstetrics and Gynecology">النساء والتوليد</option>
                            <option value="Neurology">الأعصاب</option>
                            <option value="General Practice">الطب العام</option>
                            <option value="Dentistry">طب الأسنان</option>
                        </select>
                        <div class="invalid-feedback">يرجى اختيار التخصص.</div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">أيام العمل</label>
                        <div class="d-flex flex-wrap gap-2">
                            <% const days = ['السبت','الأحد','الإثنين','الثلاثاء','الأربعاء','الخميس','الجمعة']; %>
                            <% days.forEach(day => { %>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="availableDays" value="<%= day %>" id="day-<%= day %>">
                                    <label class="form-check-label" for="day-<%= day %>"><%= day %></label>
                                </div>
                            <% }); %>
                        </div>
                        <div class="invalid-feedback">يرجى اختيار يوم عمل واحد على الأقل.</div>
                    </div>
                    <div class="mb-3">
                        <label for="addProfileImage" class="form-label">الصورة الشخصية (PNG فقط)</label>
                        <input type="file" class="form-control" id="addProfileImage" name="profileImage" accept="image/png" required>
                        <div class="invalid-feedback">يرجى رفع صورة بصيغة PNG.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn btn-primary">إضافة</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Edit Doctor Modal -->
    <div class="modal fade" id="editDoctorModal" tabindex="-1" aria-labelledby="editDoctorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="editDoctorForm" class="modal-content needs-validation" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="editDoctorModalLabel">تعديل معلومات الطبيب</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editDoctorId" name="doctorId">
                    <input type="hidden" name="csrf" value="<%= csrfToken %>">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">اسم المستخدم</label>
                        <input type="text" class="form-control" id="editUsername" name="username" required>
                        <div class="invalid-feedback">يرجى إدخال اسم المستخدم.</div>
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">البريد الإلكتروني</label>
                        <input type="email" class="form-control" id="editEmail" name="email" required>
                        <div class="invalid-feedback">يرجى إدخال بريد إلكتروني صحيح.</div>
                    </div>
                    <div class="mb-3">
                        <label for="editSpecialization" class="form-label">التخصص</label>
                        <select class="form-select" id="editSpecialization" name="specialization" required>
                            <option value="Cardiology">أمراض القلب</option>
                            <option value="Orthopedics">جراحة العظام</option>
                            <option value="Dermatology">الأمراض الجلدية</option>
                            <option value="Pediatrics">طب الأطفال</option>
                          
                        <div class="invalid-feedback">يرجى اختيار التخصص.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn btn-primary">حفظ التغييرات</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Send Message Modal -->
    <div class="modal fade" id="sendMessageModal" tabindex="-1" aria-labelledby="sendMessageModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="sendMessageForm" class="modal-content needs-validation" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="sendMessageModalLabel">إرسال رسالة</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="messageDoctorId" name="doctorId">
                    <input type="hidden" id="messageDoctorEmail" name="doctorEmail">
                    <input type="hidden" name="csrf" value="<%= csrfToken %>">
                    <div class="mb-3">
                        <label for="messageContent" class="form-label">محتوى الرسالة</label>
                        <textarea class="form-control" id="messageContent" name="messageContent" rows="3" required></textarea>
                        <div class="invalid-feedback">يرجى كتابة الرسالة.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn btn-primary">إرسال</button>
                </div>
            </form>
        </div>
    </div>

    <div id="toastArea" class="toast-container"></div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Handle sort select
        document.getElementById('sortSelect')?.addEventListener('change', function() {
            const value = this.value;
            const url = new URL(window.location.href);
            url.searchParams.set('sort', value);
            window.location.href = url.toString();
        });

        // Add Doctor
        document.getElementById('addDoctorForm')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!this.checkValidity()) {
                this.classList.add('was-validated');
                return;
            }
            const formData = new FormData(this);
            try {
                const res = await fetch('/admin/add-doctor', {
                    method: 'POST',
                    headers: { 'CSRF-Token': formData.get('csrf') },
                    body: formData
                });
                const data = await res.json();
                if (data.success) {
                    showToast('تم إضافة الطبيب بنجاح', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('addDoctorModal')).hide();
                    setTimeout(() => location.reload(), 800);
                } else {
                    showToast(data.message || 'حدث خطأ أثناء إضافة الطبيب', 'danger');
                }
            } catch (err) {
                showToast(err.message || 'حدث خطأ أثناء إضافة الطبيب', 'danger');
            }
        });

        // Edit Doctor Modal Fill
        document.querySelectorAll('.edit-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.getElementById('editDoctorId').value = this.dataset.id;
                document.getElementById('editUsername').value = this.dataset.username;
                document.getElementById('editEmail').value = this.dataset.email;
                document.getElementById('editSpecialization').value = this.dataset.specialization;
            });
        });

        // Update Doctor
        document.getElementById('editDoctorForm')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!this.checkValidity()) {
                this.classList.add('was-validated');
                return;
            }
            const doctorId = document.getElementById('editDoctorId').value;
            const csrfToken = this.querySelector('[name="csrf"]').value;
            const payload = {
                username: document.getElementById('editUsername').value,
                email: document.getElementById('editEmail').value,
                specialization: document.getElementById('editSpecialization').value
            };
            try {
                const res = await fetch(`/admin/update-doctor/${doctorId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken
                    },
                    body: JSON.stringify(payload)
                });
                const data = await res.json();
                if (data.success) {
                    showToast('تم تحديث معلومات الطبيب بنجاح', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('editDoctorModal')).hide();
                    setTimeout(() => location.reload(), 800);
                } else {
                    showToast(data.message || 'حدث خطأ أثناء تحديث معلومات الطبيب', 'danger');
                }
            } catch (err) {
                showToast('حدث خطأ أثناء تحديث معلومات الطبيب', 'danger');
            }
        });

        // Freeze Doctor
        document.querySelectorAll('.freeze-btn').forEach(btn => {
            btn.addEventListener('click', async function() {
                const doctorId = this.dataset.id;
                const csrfToken = document.querySelector('[name="csrf"]').value;
                try {
                    const res = await fetch(`/admin/freeze-doctor/${doctorId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'CSRF-Token': csrfToken
                        }
                    });
                    const data = await res.json();
                    if (data.success) {
                        showToast('تم تجميد حساب الطبيب بنجاح', 'success');
                        setTimeout(() => location.reload(), 800);
                    } else {
                        showToast(data.message || 'حدث خطأ أثناء تجميد حساب الطبيب', 'danger');
                    }
                } catch (err) {
                    showToast('حدث خطأ أثناء تجميد حساب الطبيب', 'danger');
                }
            });
        });

        // Unfreeze Doctor
        document.querySelectorAll('.unfreeze-btn').forEach(btn => {
            btn.addEventListener('click', async function() {
                const doctorId = this.dataset.id;
                const csrfToken = document.querySelector('[name="csrf"]').value;
                try {
                    const res = await fetch(`/admin/unfreeze-doctor/${doctorId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'CSRF-Token': csrfToken
                        }
                    });
                    const data = await res.json();
                    if (data.success) {
                        showToast('تم إلغاء تجميد حساب الطبيب بنجاح', 'success');
                        setTimeout(() => location.reload(), 800);
                    } else {
                        showToast(data.message || 'حدث خطأ أثناء إلغاء تجميد حساب الطبيب', 'danger');
                    }
                } catch (err) {
                    showToast('حدث خطأ أثناء إلغاء تجميد حساب الطبيب', 'danger');
                }
            });
        });

        // Message Modal Fill
        document.querySelectorAll('.message-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.getElementById('messageDoctorId').value = this.dataset.id;
                document.getElementById('messageDoctorEmail').value = this.dataset.email;
                document.getElementById('messageContent').value = '';
            });
        });

        // Send Message
        document.getElementById('sendMessageForm')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!this.checkValidity()) {
                this.classList.add('was-validated');
                return;
            }
            const doctorId = document.getElementById('messageDoctorId').value;
            const doctorEmail = document.getElementById('messageDoctorEmail').value;
            const messageContent = document.getElementById('messageContent').value;
            const csrfToken = this.querySelector('[name="csrf"]').value;
            try {
                const res = await fetch('/admin/send-message-doctor', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken
                    },
                    body: JSON.stringify({ doctorId, doctorEmail, messageContent })
                });
                const data = await res.json();
                if (data.success) {
                    showToast('تم إرسال الرسالة بنجاح', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('sendMessageModal')).hide();
                } else {
                    showToast(data.message || 'حدث خطأ أثناء إرسال الرسالة', 'danger');
                }
            } catch (err) {
                showToast('حدث خطأ أثناء إرسال الرسالة', 'danger');
            }
        });

        // Toast function
        function showToast(message, type = 'success') {
            const toastArea = document.getElementById('toastArea');
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type} border-0 show mb-2`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;
            toastArea.appendChild(toast);
            setTimeout(() => {
                toast.classList.remove('show');
                toast.remove();
            }, 4000);
        }

        // Bootstrap validation
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        // Pagination (مطابق لتصميم المدفوعات)
        function createDoctorsPagination(totalPages, currentPage) {
            const doctorsPagination = document.getElementById('doctorsPagination');
            doctorsPagination.innerHTML = '';
            if (totalPages <= 1) return;
            const ul = document.createElement('ul');
            ul.className = 'pagination justify-content-center';

            // زر السابق
            const prevLi = document.createElement('li');
            prevLi.className = `page-item${currentPage <= 1 ? ' disabled' : ''}`;
            prevLi.innerHTML = `
                <button class="pagination-btn prev-next" ${currentPage > 1 ? `onclick="goToDoctorsPage(${currentPage - 1})"` : ''} aria-label="السابق">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="#2563eb" style="width:18px;height:18px;">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    <span>السابق</span>
                </button>
            `;
            ul.appendChild(prevLi);

            // أرقام الصفحات
            for (let i = 1; i <= totalPages; i++) {
                const li = document.createElement('li');
                li.className = `page-item${i === currentPage ? ' active' : ''}`;
                li.innerHTML = `
                    <button class="pagination-btn${i === currentPage ? ' active' : ''}" ${i !== currentPage ? `onclick="goToDoctorsPage(${i})"` : ''} ${i === currentPage ? 'aria-current="page"' : ''}>
                        ${i}
                    </button>
                `;
                ul.appendChild(li);
            }

            // زر التالي
            const nextLi = document.createElement('li');
            nextLi.className = `page-item${currentPage >= totalPages ? ' disabled' : ''}`;
            nextLi.innerHTML = `
                <button class="pagination-btn prev-next" ${currentPage < totalPages ? `onclick="goToDoctorsPage(${currentPage + 1})"` : ''} aria-label="التالي">
                    <span>التالي</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="#2563eb" style="width:18px;height:18px;">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                </button>
            `;
            ul.appendChild(nextLi);

            doctorsPagination.appendChild(ul);
        }
        window.goToDoctorsPage = function(page) {
            const url = new URL(window.location.href);
            url.searchParams.set('page', page);
            window.location.href = url.toString();
        };
        <% if (typeof totalPages !== 'undefined' && typeof currentPage !== 'undefined') { %>
            createDoctorsPagination(<%= totalPages %>, <%= currentPage %>);
        <% } %>
    </script>
</body>
</html>
<%- include('footeradmin') %>