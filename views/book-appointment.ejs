<!-- views/book-appointment.ejs -->
<%- include('headerpatient') %>
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>حجز موعد</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        .doctor-card {
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }
        .doctor-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        }
        .slot {
            transition: all 0.2s ease;
            cursor: pointer;
        }
        .slot:hover:not(.unavailable):not(.booked) {
            transform: scale(1.05);
        }
        .slot.selected {
            transform: scale(1.1);
        }
        .confirmation-modal {
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        .confirmation-modal.active {
            opacity: 1;
            visibility: visible;
        }
        .loading-spinner {
            display: inline-block;
            width: 1.25rem;
            height: 1.25rem;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .toast {
            transform: translateY(-100px);
            opacity: 0;
            transition: all 0.3s ease;
        }
        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }
        .rating-stars {
            direction: ltr;
            unicode-bidi: bidi-override;
        }
        .star {
            color: #ddd;
            font-size: 1.2rem;
        }
        .star.filled {
            color: #ffc107;
        }
        .rating-progress {
            height: 0.5rem;
            border-radius: 0.25rem;
        }
        .balance-info {
            background-color: #f8fafc;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1.5rem;
            border: 1px solid #e2e8f0;
        }
        .badge-cancelled {
            background-color: #fef3c7;
            color: #92400e;
            padding: 0.25rem 0.5rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- رسائل الخطأ -->
        <div id="errorToast" class="fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white bg-red-500 font-medium hidden transition-all duration-300 transform translate-x-full"></div>
        
        <!-- رسائل النجاح -->
        <div id="successToast" class="fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white bg-green-500 font-medium hidden transition-all duration-300 transform translate-x-full"></div>

        <% if (!patient) { %>
            <div class="bg-red-50 border-l-4 border-red-500 text-red-700 p-4 rounded-r">
                <p>يجب تسجيل الدخول كـ مريض أولاً</p>
            </div>
        <% } else { %>
            <!-- حساب متوسط التقييم -->
            <% 
            let avgRating = 0;
            let ratingCount = 0;
            if (doctor.ratings && Array.isArray(doctor.ratings)) {
                ratingCount = doctor.ratings.length;
                if (ratingCount > 0) {
                    const sum = doctor.ratings.reduce((total, r) => total + (r.rating || 0), 0);
                    avgRating = sum / ratingCount;
                }
            }
            %>

            <!-- بطاقة الطبيب -->
            <div class="doctor-card bg-white rounded-xl p-6 mb-8 flex flex-col md:flex-row justify-between items-center">
                <div class="flex items-center mb-4 md:mb-0">
                    <img src="<%= doctor.profileImage || '/images/default-doctor.jpg' %>" 
                         alt="<%= doctor.username %>" 
                         class="w-16 h-16 rounded-full object-cover border-2 border-gray-100">
                    <div class="mr-4">
                        <h2 class="text-xl font-bold text-gray-800"><%= doctor.username %></h2>
                        <p class="text-gray-600"><%= doctor.specialization %></p>
                        <div class="flex items-center mt-1">
                            <div class="rating-stars">
                                <% for (let i = 1; i <= 5; i++) { %>
                                    <span class="star <%= i <= Math.round(avgRating) ? 'filled' : '' %>">★</span>
                                <% } %>
                            </div>
                            <span class="text-sm text-gray-600 mr-2">(<%= ratingCount %> تقييمات)</span>
                        </div>
                    </div>
                </div>
                <div class="flex items-center">
                    <span class="px-4 py-2 rounded-full text-sm font-medium 
                        <%= doctor.acceptingAppointments ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                        <%= doctor.acceptingAppointments ? 'يقبل الحجوزات حالياً' : 'لا يقبل الحجوزات حالياً' %>
                    </span>
                </div>
            </div>

            <!-- معلومات الرصيد -->
            <div class="balance-info bg-gray-50 p-4 rounded-lg border border-gray-200 mb-6">
                <div class="flex justify-between items-center">
                    <div>
                        <h3 class="font-bold text-gray-700">سعر الحجز</h3>
                        <p class="text-2xl font-bold text-blue-600"><%= APPOINTMENT_PRICE.toLocaleString('ar-YE') %> ر.ي</p>
                    </div>
                    <div>
                        <h3 class="font-bold text-gray-700">رصيدك الحالي</h3>
                        <p class="text-2xl font-bold <%= patient.wallet.balance >= APPOINTMENT_PRICE ? 'text-green-600' : 'text-red-600' %>">
                            <%= patient.wallet.balance.toLocaleString('ar-YE') %> ر.ي
                        </p>
                    </div>
                </div>
                <% if (patient.wallet.balance < APPOINTMENT_PRICE) { %>
                    <div class="mt-2 text-red-600">
                        <i class="fas fa-exclamation-circle mr-1"></i>
                        رصيدك غير كافٍ لحجز موعد. يرجى شحن المحفظة أولاً.
                    </div>
                <% } %>
            </div>
            <% if (restriction) { %>
                <div class="bg-yellow-50 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-6 rounded-r">
                    <h3 class="font-bold mb-2">لا يمكنك الحجز الآن</h3>
                    <p>يمكنك الحجز مرة أخرى بعد: <%= new Date(restriction.expiresAt).toLocaleString('ar-EG') %></p>
                </div>
            <% } else { %>
                <!-- نموذج الحجز -->
                <div class="bg-white rounded-xl shadow-sm p-6">
                   
                    <!-- باقي نموذج الحجز -->
                </div>
            <% } %>
            

            <% if (locals.existingAppointment && existingAppointment.status !== 'مكتمل') { %>
            <div class="bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 mb-6 rounded-r">
                <div class="flex justify-between items-start">
                    <div>
                        <h3 class="font-bold mb-2">لديك موعد محجز مسبقاً مع هذا الطبيب</h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-2">
                            <p><i class="far fa-calendar-alt ml-2"></i> <%= new Date(existingAppointment.date).toLocaleDateString('ar-EG') %></p>
                            <p><i class="far fa-clock ml-2"></i> <%= existingAppointment.time %></p>
                            <p><i class="fas fa-info-circle ml-2"></i> الحالة: <%= existingAppointment.status %></p>
                            <% if (existingAppointment.paymentStatus) { %>
                                <p><i class="fas fa-money-bill-wave ml-2"></i> حالة الدفع: <%= existingAppointment.paymentStatus %></p>
                            <% } %>
                        </div>
                    </div>
                    <% if (existingAppointment.status !== 'ملغي') { %>
                        <button id="cancelAppointmentBtn" 
                                class="px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition"
                                data-appointment-id="<%= existingAppointment._id %>">
                            إلغاء الموعد
                        </button>
                    <% } %>
                </div>
            </div>
            <% } %>

            

            <!-- نموذج الحجز -->
            <div class="bg-white rounded-xl shadow-sm p-6">
                <h2 class="text-xl font-bold text-gray-800 mb-6">حجز موعد جديد</h2>
                
                <form id="bookingForm">
                    <input type="hidden" name="doctorId" value="<%= doctor._id %>">
                    <input type="hidden" name="patientId" value="<%= patient._id %>">
                    <input type="hidden" name="time" id="selectedTime">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    
                    <!-- تاريخ الموعد -->
                    <div class="mb-6">
                        <label for="date" class="block text-gray-700 font-medium mb-2">تاريخ الموعد:</label>
                        <input type="text" id="date" name="date" 
                            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-200 focus:border-blue-500"
                            placeholder="اختر تاريخ" 
                            <%= locals.existingAppointment && existingAppointment.status !== 'مكتمل' || !doctor.acceptingAppointments || patient.wallet.balance < APPOINTMENT_PRICE ? 'disabled' : '' %>
                            required>
                    </div>
                    
                    <!-- الأوقات المتاحة -->
                    <div class="mb-6">
                        <label class="block text-gray-700 font-medium mb-2">الأوقات المتاحة:</label>
                        <div id="timeSlots" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-3">
                            <% if (locals.existingAppointment && existingAppointment.status !== 'مكتمل') { %>
                                <div class="slot booked bg-yellow-100 text-yellow-800 p-4 rounded-lg text-center cursor-not-allowed">
                                    لديك موعد مسبق
                                </div>
                            <% } else if (!doctor.acceptingAppointments) { %>
                                <div class="slot unavailable bg-red-100 text-red-800 p-4 rounded-lg text-center cursor-not-allowed">
                                    الحجوزات متوقفة
                                </div>
                            <% } else if (patient.wallet.balance < APPOINTMENT_PRICE) { %>
                                <div class="slot unavailable bg-red-100 text-red-800 p-4 rounded-lg text-center cursor-not-allowed">
                                    رصيد غير كافي
                                </div>
                            <% } else { %>
                                <div class="slot unavailable bg-gray-100 text-gray-500 p-4 rounded-lg text-center cursor-not-allowed">
                                    اختر تاريخاً أولاً
                                </div>
                            <% } %>
                        </div>
                    </div>
                    
                    <!-- الملاحظات -->
                    <div class="mb-6">
                        <label for="notes" class="block text-gray-700 font-medium mb-2">ملاحظات (اختياري):</label>
                        <textarea id="notes" name="notes" rows="3"
                            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-200 focus:border-blue-500"
                            placeholder="أي ملاحظات تريد إضافتها..."
                            <%= locals.existingAppointment && existingAppointment.status !== 'مكتمل' || !doctor.acceptingAppointments || patient.wallet.balance < APPOINTMENT_PRICE ? 'disabled' : %>></textarea>
                    </div>
                    
                    <!-- زر الحجز -->
                    <button type="button" id="submitBooking" 
                        class="w-full <%= patient.wallet.balance >= APPOINTMENT_PRICE && doctor.acceptingAppointments && (!locals.existingAppointment || existingAppointment.status === 'مكتمل') ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-400 cursor-not-allowed' %> text-white font-medium py-3 px-6 rounded-lg transition duration-200 flex justify-center items-center"
                        <%= locals.existingAppointment && existingAppointment.status !== 'مكتمل' || !doctor.acceptingAppointments || patient.wallet.balance < APPOINTMENT_PRICE ? 'disabled' : '' %>>
                        <span id="submitText">
                            <% if (locals.existingAppointment && existingAppointment.status !== 'مكتمل') { %>
                                لديك موعد مسبق
                            <% } else if (!doctor.acceptingAppointments) { %>
                                الحجوزات متوقفة
                            <% } else if (patient.wallet.balance < APPOINTMENT_PRICE) { %>
                                رصيد غير كافي
                            <% } else { %>
                                تأكيد الحجز والدفع
                            <% } %>
                        </span>
                        <span id="submitSpinner" class="loading-spinner ml-2 hidden"></span>
                    </button>

                    <!-- زر إلغاء الموعد -->
                    <button type="button" id="cancelAppointmentBtn" 
                        class="w-full bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-6 rounded-lg transition duration-200 flex justify-center items-center mt-4"
                        <%= !locals.existingAppointment || existingAppointment.status === 'مكتمل' || existingAppointment.status === 'ملغي' ? 'style="display: none;"' : '' %>>
                        <span id="cancelText">
                            <% if (locals.existingAppointment && existingAppointment.status !== 'مكتمل' && existingAppointment.status !== 'ملغي') { %>
                                إلغاء الموعد
                            <% } else { %>
                                لا يوجد موعد للإلغاء
                            <% } %>
                        </span>
                        <span id="cancelSpinner" class="loading-spinner ml-2 hidden"></span>
                    </button>
                </form>
            </div>
        <% } %>

        <!-- تقييمات الطبيب -->
        <% if (doctor.ratingCount > 0) { %>
        <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
            <h3 class="text-lg font-bold text-gray-800 mb-4">تقييمات المرضى</h3>
            
            <div class="mb-6">
                <div class="flex items-center mb-2">
                    <span class="text-2xl font-bold text-gray-800 mr-2">
                        <%= doctor.avgRating.toFixed(1) %>
                    </span>
                    <div class="rating-stars">
                        <% for (let i = 1; i <= 5; i++) { %>
                            <span class="star <%= i <= Math.round(doctor.avgRating) ? 'filled' : '' %>">★</span>
                        <% } %>
                    </div>
                    <span class="text-gray-600 text-sm mr-2">
                        (<%= doctor.ratingCount %> تقييم)
                    </span>
                </div>
                
                <div class="space-y-2">
                    <% for (let i = 5; i >= 1; i--) { 
                        const count = doctor.ratings.filter(r => Math.round(r.rating) === i).length;
                        const percentage = (count / doctor.ratingCount) * 100;
                    %>
                        <div class="flex items-center">
                            <span class="text-sm text-gray-600 w-8"><%= i %> نجوم</span>
                            <div class="flex-1 mx-2">
                                <div class="rating-progress bg-gray-200 w-full">
                                    <div class="rating-progress bg-yellow-400" 
                                         style="width: <%= percentage %>%"></div>
                                </div>
                            </div>
                            <span class="text-sm text-gray-600 w-12">
                                <%= Math.round(percentage) %>%
                            </span>
                        </div>
                    <% } %>
                </div>
            </div>
            
            <div class="border-t pt-4">
                <h4 class="font-medium mb-3">آخر التقييمات</h4>
                <% doctor.ratings.slice(0, 3).forEach(rating => { %>
                    <div class="border-b border-gray-100 pb-3 mb-3">
                        <div class="flex items-center mb-1">
                            <% if (rating.patient) { %>
                                <img src="<%= rating.patient.profileImage || '/images/default-patient.jpg' %>" 
                                     class="w-8 h-8 rounded-full mr-2">
                                <span class="font-medium"><%= rating.patient.name %></span>
                            <% } else { %>
                                <img src="/images/default-patient.jpg" class="w-8 h-8 rounded-full mr-2">
                                <span class="font-medium text-gray-400">مستخدم غير معروف</span>
                            <% } %>
                            <div class="rating-stars mr-2">
                                <% for (let i = 1; i <= 5; i++) { %>
                                    <span class="star <%= i <= rating.rating ? 'filled' : '' %>">★</span>
                                <% } %>
                            </div>
                            <span class="text-gray-500 text-sm">
                                <%= new Date(rating.createdAt).toLocaleDateString('ar-EG') %>
                            </span>
                        </div>
                        <% if (rating.comment) { %>
                            <p class="text-gray-700 text-sm mt-1"><%= rating.comment %></p>
                        <% } %>
                    </div>
                <% }); %>
            </div>
        </div>
        <% } %>
    </div>

    <!-- نموذج التأكيد -->
    <div id="confirmationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50 hidden">
        <div class="bg-white rounded-xl p-6 w-full max-w-md">
            <h3 class="text-xl font-bold text-gray-800 mb-4">تأكيد الحجز والدفع</h3>
            <div class="space-y-4">
                <div class="bg-blue-50 p-4 rounded-lg">
                    <div class="flex justify-between mb-2">
                        <span class="font-medium">سعر الحجز:</span>
                        <span class="font-bold"><%= APPOINTMENT_PRICE.toLocaleString('ar-YE') %> ر.ي</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="font-medium">الرصيد بعد الحجز:</span>
                        <span class="font-bold <%= (patient.wallet.balance - APPOINTMENT_PRICE) >= 0 ? 'text-green-600' : 'text-red-600' %>">
                            <%= (patient.wallet.balance - APPOINTMENT_PRICE).toLocaleString('ar-YE') %> ر.ي
                        </span>
                    </div>
                </div>
                <p class="text-gray-600">هل أنت متأكد من حجز الموعد والدفع من محفظتك؟</p>
            </div>
            <div class="flex justify-end space-x-3 rtl:space-x-reverse mt-6">
                <button id="cancelBookingBtn" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition">
                    إلغاء
                </button>
                <button id="confirmBookingBtn" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition flex items-center">
                    <span id="confirmText">تأكيد الدفع والحجز</span>
                    <span id="confirmSpinner" class="loading-spinner ml-2 hidden"></span>
                </button>
            </div>
        </div>
    </div>

<<<<<<< HEAD
    <!-- نموذج تأكيد الإلغاء -->
    <div id="cancelModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50 hidden">
        <div class="bg-white rounded-xl p-6 w-full max-w-md">
            <h3 class="text-xl font-bold text-gray-800 mb-4">شروط إلغاء الموعد</h3>
            <div class="space-y-4">
                <div class="bg-red-50 p-4 rounded-lg">
                    <ul class="list-disc list-inside text-red-800 space-y-2">
                        <li>سيتم استرداد 50% فقط من قيمة الحجز إلى محفظتك</li>
                        <li>لن تتمكن من حجز موعد مع نفس الطبيب لمدة 24 ساعة</li>
                        <li>سيتم إلغاء الموعد الحالي ولن يظهر في سجلك</li>
                    </ul>
                </div>
                <div class="flex items-center">
                    <input type="checkbox" id="agreeTerms" class="mr-2">
                    <label for="agreeTerms" class="text-gray-700">أوافق على الشروط والأحكام</label>
                </div>
            </div>
            <div class="flex justify-end space-x-3 rtl:space-x-reverse mt-6">
                <button id="cancelCancelBtn" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition">
=======
    <!-- نموذج إلغاء الموعد -->
    <div id="cancelModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50 hidden">
        <div class="bg-white rounded-xl p-6 w-full max-w-md">
            <h3 class="text-xl font-bold text-gray-800 mb-4">إلغاء الموعد</h3>
            
            <div class="space-y-4">
                <div class="bg-red-50 p-4 rounded-lg">
                    <h4 class="font-bold text-red-700 mb-2">شروط الإلغاء:</h4>
                    <ul class="list-disc list-inside text-red-700 space-y-1">
                        <li>سيتم إرجاع 50% فقط من قيمة الحجز إلى محفظتك</li>
                        <li>لن تتمكن من حجز موعد جديد مع هذا الطبيب قبل 24 ساعة</li>
                        <li>سيتم إخطار الطبيب بإلغاء الموعد</li>
                    </ul>
                </div>
                
                <div>
                    <label for="cancelReason" class="block text-gray-700 font-medium mb-2">سبب الإلغاء:</label>
                    <textarea id="cancelReason" rows="3" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-200 focus:border-red-500" placeholder="الرجاء ذكر سبب الإلغاء..."></textarea>
                </div>
                
                <div class="flex items-center">
                    <input type="checkbox" id="agreeTerms" class="mr-2">
                    <label for="agreeTerms" class="text-gray-700">أوافق على شروط الإلغاء</label>
                </div>
            </div>
            
            <div class="flex justify-end space-x-3 rtl:space-x-reverse mt-6">
                <button id="closeCancelModal" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition">
>>>>>>> a7a5b16802c9127625fa8133dee330a4d940ef88
                    رجوع
                </button>
                <button id="confirmCancelBtn" class="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition flex items-center" disabled>
                    <span id="confirmCancelText">تأكيد الإلغاء</span>
                    <span id="confirmCancelSpinner" class="loading-spinner ml-2 hidden"></span>
                </button>
            </div>
        </div>
    </div>

    <!-- المكتبات الخارجية -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // عناصر DOM
            const errorToast = document.getElementById('errorToast');
            const successToast = document.getElementById('successToast');
            const dateInput = document.getElementById('date');
            const timeSlotsContainer = document.getElementById('timeSlots');
            const submitBtn = document.getElementById('submitBooking');
            const submitText = document.getElementById('submitText');
            const submitSpinner = document.getElementById('submitSpinner');
            const confirmationModal = document.getElementById('confirmationModal');
            const cancelModal = document.getElementById('cancelModal');
            const confirmBookingBtn = document.getElementById('confirmBookingBtn');
            const cancelBookingBtn = document.getElementById('cancelBookingBtn');
<<<<<<< HEAD

            // إضافة الأكواد الجديدة
            document.getElementById('cancelAppointmentBtn').addEventListener('click', function() {
                confirmationModal.classList.add('hidden');
                cancelModal.classList.remove('hidden');
            });

            document.getElementById('agreeTerms').addEventListener('change', function() {
                document.getElementById('confirmCancelBtn').disabled = !this.checked;
            });

            document.getElementById('cancelCancelBtn').addEventListener('click', function() {
                cancelModal.classList.add('hidden');
            });

            document.getElementById('confirmCancelBtn').addEventListener('click', async function() {
                try {
                    this.disabled = true;
                    document.getElementById('confirmCancelText').classList.add('hidden');
                    document.getElementById('confirmCancelSpinner').classList.remove('hidden');

                    <% if (existingAppointment && existingAppointment._id) { %>
                        const response = await axios.post('/cancel-appointment', {
                            appointmentId: '<%= existingAppointment._id %>',
                            _csrf: '<%= csrfToken %>'
                        });

                        if (response.data.success) {
                            showSuccess('تم إلغاء الموعد بنجاح واسترداد 50% من المبلغ');
                            
                            // إخفاء زر إلغاء الموعد
                            const cancelAppointmentBtn = document.getElementById('cancelAppointmentBtn');
                            if (cancelAppointmentBtn) {
                                cancelAppointmentBtn.style.display = 'none';
                            }

                            setTimeout(() => window.location.reload(), 1500);
                        } else {
                            throw new Error(response.data.message || 'حدث خطأ أثناء الإلغاء');
                        }
                    <% } else { %>
                        throw new Error('لا يوجد موعد لإلغائه');
                    <% } %>
                } catch (error) {
                    showError(error.response?.data?.message || error.message);
                    document.getElementById('confirmCancelText').classList.remove('hidden');
                    document.getElementById('confirmCancelSpinner').classList.add('hidden');
                    document.getElementById('confirmCancelBtn').disabled = false;
                }
            });

=======
            const cancelAppointmentBtn = document.getElementById('cancelAppointmentBtn');
            const cancelModal = document.getElementById('cancelModal');
            const closeCancelModal = document.getElementById('closeCancelModal');
            const confirmCancelBtn = document.getElementById('confirmCancelBtn');
            const agreeTerms = document.getElementById('agreeTerms');
            const cancelReason = document.getElementById('cancelReason');
            
>>>>>>> a7a5b16802c9127625fa8133dee330a4d940ef88
            // تهيئة منتقي التاريخ
            const datePicker = flatpickr(dateInput, {
                locale: 'ar',
                minDate: 'today',
                maxDate: new Date().fp_incr(30),
                disable: [
                    function(date) {
                        const availableDays = JSON.parse('<%- JSON.stringify(doctor.availableDays || []) %>');
                        if (availableDays.length === 0) return false;
                        
                        const day = date.getDay();
                        const dayNames = ['الأحد', 'الإثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'];
                        return !availableDays.includes(dayNames[day]);
                    }
                ]
            });

            // عند تغيير التاريخ
            dateInput.addEventListener('change', function() {
                const date = this.value;
                const doctorId = '<%= doctor._id %>';
                const patientId = '<%= patient._id %>';
                
                if (date) {
                    loadAvailableSlots(doctorId, date, patientId);
                } else {
                    updateTimeSlotsDisplay([], 'اختر تاريخاً أولاً');
                }
            });

            // عند النقر على تأكيد الحجز
            submitBtn.addEventListener('click', async function() {
                const timeSlot = document.getElementById('selectedTime').value;
                
                if (!timeSlot) {
                    showError('الرجاء اختيار وقت');
                    return;
                }
                
                // إظهار نموذج التأكيد
                confirmationModal.classList.remove('hidden');
            });

            // تأكيد الحجز
            confirmBookingBtn.addEventListener('click', async function() {
                try {
                    // تعطيل الأزرار وإظهار مؤشر التحميل
                    submitBtn.disabled = true;
                    confirmBookingBtn.disabled = true;
                    document.getElementById('confirmText').classList.add('hidden');
                    document.getElementById('confirmSpinner').classList.remove('hidden');
                    
                    // جمع بيانات الحجز
                    const formData = {
                        doctorId: '<%= doctor._id %>',
                        date: dateInput.value,
                        time: document.getElementById('selectedTime').value,
                        notes: document.getElementById('notes').value,
                        _csrf: '<%= csrfToken %>'
                    };
                    
                    // إرسال طلب الحجز
                    const response = await axios.post('/book-appointment', formData);
                    
                    if (response.data.success) {
                        showSuccess('تم حجز الموعد بنجاح');
                        confirmationModal.classList.add('hidden');
                        
                        // إعادة تحميل الصفحة بعد ثانية
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        throw new Error(response.data.message || 'حدث خطأ أثناء الحجز');
                    }
                } catch (error) {
                    console.error('Error booking appointment:', error);
                    showError(error.response?.data?.message || error.message);
                    
                    // إعادة تمكين الأزرار وإخفاء مؤشر التحميل
                    submitBtn.disabled = false;
                    confirmBookingBtn.disabled = false;
                    document.getElementById('confirmText').classList.remove('hidden');
                    document.getElementById('confirmSpinner').classList.add('hidden');
                }
            });

            // إلغاء الحجز
            cancelBookingBtn.addEventListener('click', function() {
                confirmationModal.classList.add('hidden');
            });

            // إلغاء الموعد الموجود
            if (cancelAppointmentBtn) {
                cancelAppointmentBtn.addEventListener('click', function() {
                    cancelModal.classList.remove('hidden');
                });
            }

            closeCancelModal.addEventListener('click', function() {
                cancelModal.classList.add('hidden');
            });

            agreeTerms.addEventListener('change', function() {
                confirmCancelBtn.disabled = !this.checked || cancelReason.value.trim() === '';
            });

            cancelReason.addEventListener('input', function() {
                confirmCancelBtn.disabled = !agreeTerms.checked || this.value.trim() === '';
            });

            confirmCancelBtn.addEventListener('click', async function() {
                const appointmentId = cancelAppointmentBtn.getAttribute('data-appointment-id');
                const reason = cancelReason.value.trim();
                
                if (!reason) {
                    showError('الرجاء إدخال سبب الإلغاء');
                    return;
                }
                
                try {
                    confirmCancelBtn.disabled = true;
                    document.getElementById('confirmCancelText').classList.add('hidden');
                    document.getElementById('confirmCancelSpinner').classList.remove('hidden');
                    
                    const response = await axios.post('/cancel-appointment', {
                        appointmentId,
                        reason,
                        _csrf: '<%= csrfToken %>'
                    });
                    
                    if (response.data.success) {
                        showSuccess('تم إلغاء الموعد بنجاح');
                        cancelModal.classList.add('hidden');
                        
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        throw new Error(response.data.message || 'حدث خطأ أثناء الإلغاء');
                    }
                } catch (error) {
                    console.error('Error cancelling appointment:', error);
                    showError(error.response?.data?.message || error.message);
                    
                    confirmCancelBtn.disabled = false;
                    document.getElementById('confirmCancelText').classList.remove('hidden');
                    document.getElementById('confirmCancelSpinner').classList.add('hidden');
                }
            });

            // تحميل الأوقات المتاحة
            async function loadAvailableSlots(doctorId, date, patientId) {
                try {
                    updateTimeSlotsDisplay([], 'جارٍ تحميل الأوقات المتاحة...');
                    
                    const response = await axios.get(`/get-available-slots?doctorId=${doctorId}&date=${date}&patientId=${patientId}`);
                    
                    if (response.data.message && response.data.message.includes("الطبيب لم يحدد")) {
                        updateTimeSlotsDisplay([], 'الطبيب لم يحدد أوقات العمل بعد');
                        return;
                    }
                    
                    if (response.data.existingAppointment) {
                        window.location.reload();
                        return;
                    }
                    
                    if (response.data.availableSlots && response.data.availableSlots.length > 0) {
                        updateTimeSlotsDisplay(response.data.availableSlots);
                    } else {
                        updateTimeSlotsDisplay([], 'لا توجد أوقات متاحة في هذا التاريخ');
                    }
                } catch (error) {
                    console.error('Error loading available slots:', error);
                    updateTimeSlotsDisplay([], 'حدث خطأ أثناء جلب الأوقات المتاحة');
                }
            }

            // تحديث عرض الأوقات المتاحة
            function updateTimeSlotsDisplay(slots, message = null) {
                // مسح المحتوى الحالي
                while (timeSlotsContainer.firstChild) {
                    timeSlotsContainer.removeChild(timeSlotsContainer.firstChild);
                }
                
                if (message) {
                    const messageElement = document.createElement('div');
                    messageElement.className = 'slot unavailable bg-gray-100 text-gray-500 p-4 rounded-lg text-center col-span-full';
                    messageElement.textContent = message;
                    timeSlotsContainer.appendChild(messageElement);
                    return;
                }
                
                if (slots.length === 0) {
                    updateTimeSlotsDisplay([], 'لا توجد أوقات متاحة في هذا التاريخ');
                    return;
                }
                
                slots.forEach(slot => {
                    const slotElement = document.createElement('div');
                    slotElement.className = 'slot bg-blue-50 text-blue-800 p-4 rounded-lg text-center font-medium cursor-pointer hover:bg-blue-100 transition';
                    slotElement.textContent = slot;
                    slotElement.dataset.time24 = convertTo24Hour(slot);
                    
                    slotElement.addEventListener('click', function() {
                        // إزالة التحديد من جميع الأزرار
                        document.querySelectorAll('.slot').forEach(el => {
                            el.classList.remove('bg-blue-500', 'text-white');
                            el.classList.add('bg-blue-50', 'text-blue-800');
                        });
                        
                        // تطبيق التحديد على الزر المختار
                        this.classList.remove('bg-blue-50', 'text-blue-800');
                        this.classList.add('bg-blue-500', 'text-white');
                        document.getElementById('selectedTime').value = this.dataset.time24;
                    });
                
                    timeSlotsContainer.appendChild(slotElement);
                });
            }

            // تحويل الوقت إلى تنسيق 24 ساعة
            function convertTo24Hour(time12) {
                const [time, period] = time12.split(' ');
                let [hours, minutes] = time.split(':');
                
                hours = parseInt(hours);
                if (period === 'م' && hours < 12) hours += 12;
                if (period === 'ص' && hours === 12) hours = 0;
                
                return `${hours.toString().padStart(2, '0')}:${minutes}`;
            }

            // عرض رسالة الخطأ
            function showError(message) {
                errorToast.textContent = message;
                errorToast.classList.remove('hidden', 'translate-x-full');
                errorToast.classList.add('translate-x-0');
                
                setTimeout(() => {
                    errorToast.classList.add('translate-x-full');
                    setTimeout(() => errorToast.classList.add('hidden'), 300);
                }, 5000);
            }

            // عرض رسالة النجاح
            function showSuccess(message) {
                successToast.textContent = message;
                successToast.classList.remove('hidden', 'translate-x-full');
                successToast.classList.add('translate-x-0');
                
                setTimeout(() => {
                    successToast.classList.add('translate-x-full');
                    setTimeout(() => successToast.classList.add('hidden'), 300);
                }, 5000);
            }
        });
    </script>
</body>
</html>
