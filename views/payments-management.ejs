<%- include('headeradmin') %>
<div class="main-content" style="margin-left: 250px; padding: 2rem;">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">إدارة المدفوعات والمحافظ</h1>
    
    <!-- إضافة رصيد للمريض -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-bold text-gray-700 mb-4">إضافة رصيد لمريض</h2>
        <form id="addFundsForm" class="space-y-4 max-w-lg">
            <div>
                <label for="patientEmail" class="block text-sm font-medium text-gray-700 mb-1">البريد الإلكتروني للمريض:</label>
                <input type="email" id="patientEmail" required 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                <div id="patientSearchResults" class="mt-2 space-y-2 hidden"></div>
            </div>
            <div>
                <label for="amount" class="block text-sm font-medium text-gray-700 mb-1">المبلغ (ر.س):</label>
                <input type="number" id="amount" min="1" required 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            </div>
            <div>
                <label for="description" class="block text-sm font-medium text-gray-700 mb-1">الوصف:</label>
                <input type="text" id="description" required 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
            </div>
            <button type="submit" 
                    class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition flex items-center">
                <span id="submitText">إضافة الرصيد</span>
                <span id="submitSpinner" class="loading-spinner ml-2 hidden"></span>
            </button>
        </form>
    </div>

    <!-- سجل المدفوعات -->
    <div class="bg-white rounded-lg shadow-md p-6">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-bold text-gray-700">سجل المدفوعات</h2>
            <div class="flex space-x-2">
                <select id="paymentFilter" class="px-3 py-1 border border-gray-300 rounded-md">
                    <option value="all">جميع المدفوعات</option>
                    <option value="wallet">المحفظة</option>
                    <option value="electronic">إلكتروني</option>
                </select>
                <input type="date" id="dateFilter" class="px-3 py-1 border border-gray-300 rounded-md">
            </div>
        </div>
        
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">المريض</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">الطبيب</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">التاريخ</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">المبلغ</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">طريقة الدفع</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">الحالة</th>
                    </tr>
                </thead>
                <tbody id="paymentsTableBody" class="bg-white divide-y divide-gray-200">
                    <!-- سيتم تعبئة البيانات عبر JavaScript -->
                </tbody>
            </table>
        </div>
        
        <div id="paymentsPagination" class="mt-4 flex justify-center">
            <!-- سيتم تعبئة أزرار التصفح هنا -->
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const addFundsForm = document.getElementById('addFundsForm');
    const patientEmailInput = document.getElementById('patientEmail');
    const patientSearchResults = document.getElementById('patientSearchResults');
    const paymentsTableBody = document.getElementById('paymentsTableBody');
    const paymentFilter = document.getElementById('paymentFilter');
    const dateFilter = document.getElementById('dateFilter');
    const paymentsPagination = document.getElementById('paymentsPagination');
    
    let currentPage = 1;
    const itemsPerPage = 10;
    
    // تحميل سجل المدفوعات
    async function loadPayments(page = 1, filter = 'all', date = '') {
        try {
            currentPage = page;
            const response = await axios.get(`/admin/payments?page=${page}&limit=${itemsPerPage}&filter=${filter}&date=${date}`);
            
            // عرض البيانات في الجدول
            paymentsTableBody.innerHTML = '';
            
            if (response.data.payments.length === 0) {
                paymentsTableBody.innerHTML = `
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-gray-500">لا توجد مدفوعات لعرضها</td>
                    </tr>
                `;
                return;
            }
            
            response.data.payments.forEach(payment => {
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50';
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="ml-4">
                                <div class="text-sm font-medium text-gray-900">${payment.patient.name}</div>
                                <div class="text-sm text-gray-500">${payment.patient.email}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">${payment.doctor.username}</div>
                        <div class="text-sm text-gray-500">${payment.doctor.specialization}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">
                            ${new Date(payment.createdAt).toLocaleDateString('ar-SA')}
                        </div>
                        <div class="text-sm text-gray-500">
                            ${new Date(payment.createdAt).toLocaleTimeString('ar-SA')}
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        ${payment.amount.toFixed(2)} ر.س
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            ${payment.paymentMethod === 'محفظة' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'}">
                            ${payment.paymentMethod}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            ${payment.status === 'مكتمل' ? 'bg-green-100 text-green-800' : 
                              payment.status === 'فشل' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}">
                            ${payment.status}
                        </span>
                    </td>
                `;
                paymentsTableBody.appendChild(row);
            });
            
            // إنشاء أزرار التصفح
            createPagination(response.data.totalPages, page);
            
        } catch (error) {
            console.error('Error loading payments:', error);
            showToast('حدث خطأ أثناء جلب سجل المدفوعات', 'error');
        }
    }
    
    // إنشاء أزرار التصفح
    function createPagination(totalPages, currentPage) {
        paymentsPagination.innerHTML = '';
        
        if (totalPages <= 1) return;
        
        const ul = document.createElement('ul');
        ul.className = 'flex space-x-1';
        
        // زر السابق
        if (currentPage > 1) {
            const li = document.createElement('li');
            li.innerHTML = `
                <button onclick="loadPayments(${currentPage - 1}, paymentFilter.value, dateFilter.value)" 
                        class="px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50">
                    السابق
                </button>
            `;
            ul.appendChild(li);
        }
        
        // أزرار الصفحات
        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.innerHTML = `
                <button onclick="loadPayments(${i}, paymentFilter.value, dateFilter.value)" 
                        class="px-3 py-1 border ${i === currentPage ? 'bg-blue-600 text-white' : 'border-gray-300 hover:bg-gray-50'} rounded-md">
                    ${i}
                </button>
            `;
            ul.appendChild(li);
        }
        
        // زر التالي
        if (currentPage < totalPages) {
            const li = document.createElement('li');
            li.innerHTML = `
                <button onclick="loadPayments(${currentPage + 1}, paymentFilter.value, dateFilter.value)" 
                        class="px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-50">
                    التالي
                </button>
            `;
            ul.appendChild(li);
        }
        
        paymentsPagination.appendChild(ul);
    }
    
    // البحث عن المرضى عند إدخال البريد الإلكتروني
    patientEmailInput.addEventListener('input', async (e) => {
        const email = e.target.value;
        if (email.length > 2) {
            try {
                const response = await axios.get(`/admin/search-patients?email=${encodeURIComponent(email)}`);
                
                patientSearchResults.innerHTML = '';
                patientSearchResults.classList.add('hidden');
                
                if (response.data.length > 0) {
                    response.data.forEach(patient => {
                        const patientCard = document.createElement('div');
                        patientCard.className = 'p-2 border border-gray-200 rounded-md hover:bg-gray-50 cursor-pointer';
                        patientCard.innerHTML = `
                            <div class="font-medium">${patient.name}</div>
                            <div class="text-sm text-gray-600">${patient.email}</div>
                            <div class="text-sm text-blue-600">الرصيد: ${patient.wallet.balance.toFixed(2)} ر.س</div>
                        `;
                        
                        patientCard.addEventListener('click', () => {
                            patientEmailInput.value = patient.email;
                            patientSearchResults.classList.add('hidden');
                        });
                        
                        patientSearchResults.appendChild(patientCard);
                    });
                    
                    patientSearchResults.classList.remove('hidden');
                }
            } catch (error) {
                console.error('Error searching patients:', error);
            }
        } else {
            patientSearchResults.classList.add('hidden');
        }
    });
    
    // إضافة رصيد للمريض
    addFundsForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const submitText = document.getElementById('submitText');
        const submitSpinner = document.getElementById('submitSpinner');
        
        try {
            submitText.classList.add('hidden');
            submitSpinner.classList.remove('hidden');
            
            const email = patientEmailInput.value;
            const amount = document.getElementById('amount').value;
            const description = document.getElementById('description').value;
            
            const response = await axios.post('/admin/add-wallet-funds', {
                email,
                amount,
                description
            }, {
                headers: {
                    'CSRF-Token': '<%= csrfToken %>'
                }
            });
            
            if (response.data.success) {
                showToast('تمت إضافة الرصيد بنجاح', 'success');
                addFundsForm.reset();
                patientSearchResults.classList.add('hidden');
                loadPayments(currentPage, paymentFilter.value, dateFilter.value);
            } else {
                throw new Error(response.data.message || 'حدث خطأ أثناء إضافة الرصيد');
            }
        } catch (error) {
            console.error('Error adding funds:', error);
            showToast(error.response?.data?.message || error.message, 'error');
        } finally {
            submitText.classList.remove('hidden');
            submitSpinner.classList.add('hidden');
        }
    });
    
    // تصفية المدفوعات
    paymentFilter.addEventListener('change', () => {
        loadPayments(1, paymentFilter.value, dateFilter.value);
    });
    
    dateFilter.addEventListener('change', () => {
        loadPayments(1, paymentFilter.value, dateFilter.value);
    });
    
    // عرض رسالة تنبيه
    function showToast(message, type = 'success') {
        const toast = document.createElement('div');
        toast.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white font-medium ${
            type === 'success' ? 'bg-green-500' : 'bg-red-500'
        }`;
        toast.textContent = message;
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.remove();
        }, 5000);
    }
    
    // جعل الدوال متاحة عالمياً للتصفح
    window.loadPayments = loadPayments;
    
    // تحميل البيانات الأولية
    loadPayments();
});
</script>